{{ if eq .chezmoi.os "windows" -}}
# Script to install and configure new machine.
# This file should be ran as elevated Administrator.
#
# This script needs to be idempotent, that is, it needs to be runnable multiple
# times without producing an error on consequent runs.

.  "$PSScriptRoot/config_user.ps1"

# Self-elevate the script if required.
if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
	if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
		$CommandLine = "-NoExit -File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
		Start-Process -FilePath PowerShell.exe -Verb Runas -ArgumentList $CommandLine
		Exit
	}
}

# Enable Developer Mode to allow regular users to create symbolic links.
Set-itemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" AllowDevelopmentWithoutDevLicense 1 -Type DWord

# Install Chocolatey.
# This is safe even if Chocolatey is already installed. 
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Configure Chocolatey.
choco feature enable -n allowGlobalConfirmation

# Install packages.
choco install pwsh
choco install vim
choco install neovim
choco install lockhunter
choco install 7zip
choco install microsoft-windows-terminal
choco install puretext
choco install winscp.install
choco install winscp

# Install Windows features
try {
	Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0
}
catch [System.Runtime.InteropServices.COMException] {
	if ($_.Exception.ErrorCode -eq 0x80070422) {
		Write-Warning "Windows capability SSH Client not installed. Installing Windows capabilities is not supported in Windows Sandbox."
	}
}
{{ end -}}
