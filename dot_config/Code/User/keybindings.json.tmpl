// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+shift+alt+m",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "alt+oem_3",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "shift+7",
        "command": "list.find",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // This enables Vim tab navigation in Markdown preview and Keyboard Shortcuts tabs.
    {
        "key": "g t",
        "command": "workbench.action.nextEditorInGroup",
        "when": "activeWebviewPanelId == 'markdown.preview' && neovim.mode != 'insert' && !terminalFocus"
    },
    {
        "key": "g shift+t",
        "command": "workbench.action.previousEditorInGroup",
        "when": "activeWebviewPanelId == 'markdown.preview' && neovim.mode != 'insert' && !terminalFocus"
   },
   {
      "key": "ctrl+c",
      "command": "-vscode-neovim.escape",
      "when": "editorTextFocus && neovim.ctrlKeysNormal.c && neovim.init && !dirtyDiffVisible && !findWidgetVisible && !inReferenceSearchEditor && !markersNavigationVisible && !notebookCellFocused && !notificationCenterVisible && !parameterHintsVisible && !referenceSearchVisible && neovim.mode == 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
   },
   {
      "key": "ctrl+c",
      "command": "-vscode-neovim.escape",
      "when": "editorTextFocus && neovim.ctrlKeysInsert.c && neovim.init && neovim.mode != 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
},
{
    "key": "ctrl+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
},
{
    "key": "ctrl+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
},
{
    "key": "ctrl+down",
    "command": "-scrollLineDown",
    "when": "textInputFocus"
},
{
    "key": "ctrl+up",
    "command": "-scrollLineUp",
    "when": "textInputFocus"
},
{
    "key": "ctrl+shift+i",
    "command": "-workbench.action.quickchat.toggle",
    "when": "chatIsEnabled"
},
{
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
},
{
    "key": "alt+oem_3",
    "command": "-workbench.action.editorDictation.start",
    "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
},
// Requires extension rebornix.toggle to work.
{
    "key": "alt+x",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
        "id": "minimap",
        "value": [
            {
                "editor.lineNumbers": "relative"
            },
            {
                "editor.lineNumbers": "on"
            }
        ]
    }
},
// GitHub CoPilot.
{
    "key": "shift+alt+p",
    "command": "workbench.action.chat.attachFile"
},
{
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
},
{
    "key": "shift+alt+i",
    "command": "inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
},
{
    "key": "ctrl+i",
    "command": "-inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
},
// Make Copilot Next Edit Suggestions work with Neovim.
// https://github.com/vscode-neovim/vscode-neovim/discussions/2381
{
    "key": "tab",
    "command": "-vscode-neovim.send",
    "when": "neovim.init && neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
},
{
    "key": "escape",
    "command": "-vscode-neovim.send",
    "when": "neovim.init && neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
}{{- if stat (joinPath .chezmoi.homeDir ".chezmoi_local_machine/.config/Code/User/keybindings.json") }},

{{ include (joinPath .chezmoi.homeDir ".chezmoi_local_machine/.config/Code/User/keybindings.json") }}
{{- end }}
]
